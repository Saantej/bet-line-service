version: "3.9"

services:
  line-provider:
    build:
      context: ./line-provider
      dockerfile: Dockerfile.line-provider
    container_name: line-provider
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=db
    ports:
      - "8000:8000"
    volumes:
      - ./line-provider:/app r
    command: >
      uvicorn app.app:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - app-network

  bet-maker:
    build:
      context: ./bet-maker
      dockerfile: Dockerfile.bet-maker
    container_name: bet-maker
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_HOST=db
      - REDIS_URL=redis://redis:6379/0
      - LINE_PROVIDER_URL=http://line-provider:8000
    ports:
      - "8001:8000"
    env_file:
      - .env
    depends_on:
      - line-provider
      - db
      - redis
    volumes:
      - ./bet-maker:/app 
    command: >
      sh -c "
      while ! nc -z db 5432 || ! nc -z redis 6379; do sleep 1; done;
      alembic upgrade head &&
      uvicorn app.app:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - app-network

  db:
    image: postgres:14
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:6.0
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
